
(add ((let (abcd 1)) (sub 3 abcd)) 4)
(mult ((let (a 1) (b 2)) (add a b)) (sqrt 2))
(add ((let (a ((let (b 2)) (mult b (sqrt 10))))) (div a 2)) ((let (c 5)) (sqrt c)))
((let (first (sub 5 1)) (second 2)) (add (pow 2 first) (sqrt second)))
((let (a ((let (c 3) (d 4)) (mult c d)))) (sqrt a))
((let (integer a 1))(print a))
((let (real b 10))(print b))
((let (integer a (read)) (real b (read))) (print a b))
((let (a 100)) (cond (smaller (rand) 100) (add a 2) (sub a 2)))
((let (myA (read))(myB (rand)))(cond (smaller myA myB) (print myA) (print myB)))
(add 1 2 3 4 5)
((let (integer a 1)(real b 2))(print a b 3))
((let (real myFunc lambda (x y) (mult (add x 5) (sub y 2)))) (sub (myFunc 3 5) 2))
((let (f lambda (x y) (add x y)))(f (sub 5 2) (mult 2 3)))
((let (a 1) (f lambda (x y) (add x y)))(f 2 (f a 3)))
((let (a (read)) (b (rand)))(add a (add b (add a ((let (a (read))) (add b a))))))
((let (a 2) (f lambda (x y) ((let (b 3)) (add x (mult b y)))))(f (f (f a 2) (mult a 3)) (f a (mult a 5))))